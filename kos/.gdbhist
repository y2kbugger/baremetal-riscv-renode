c
si
p &a
p a
p &current_process
p current_process
p gp
p $gp
exit
q
p __stack
break mtvec_interrupt_handler
p __global_pointer$
p/a __global_pointer$
p/a (*void)__global_pointer$
p/a (void)__global_pointer$
p/a (void*)__global_pointer$
p __bss_start
p (void*)__bss_start
p (void*)__DATA_BEGIN__
p (void*)__SDATA_BEGIN__
p (void*)__BSS_END__
p/a gp
p/a $gp
until 59
p *current_process
p b
a
fin
p/a $a1
p/a $sp
p aaa
p (int)aaa
p *$sp
p (int*)$sp
p $sp
p *(int*)$sp
a2
p $a2
watch a
break init_processes
start
s
break restore_process
p $tp
p t0
p $t0
x 66472
p tp
p *$tp
p (void*)$tp
p *(void*)$tp
p (d**)$tp
*(int*)$tp
(int*)$tp
p (int*)$tp
p *(int*)$tp
p/a *(int*)$tp
x 0x116ec
x/20xw 0x116ec
x/250xw a
x/250xw <a>
x 11aa14
x 0x11aa14
x/100xh 0x11aa14
x/100xh 0x11a14
x/100xw 0x11a14
x/250xw $tp
x/4xw 0x000116ec -2
x/4xw 0x000116ec
x/4xw $tp
x/xw 0x000116ec
x/50xw 0x000116ec
x/50xw 0x000116ec+29
x/50xw 0x000116ec+29*4
x/50xw 0x000103a8
x/xw 0x000116ec+29*4
x/xw 0x000116ec+29*4 +1
x/xw 0x000116ec+29*4 +1*4
/xw
x/xw 0x00000061
p/a $t0
p/ a
p/a a
p/a 0x116ec
x/xw 0x116ec
/830xw
x/xw 0x000103a8
break store_process
x/xw $tp
x/29xw 0x116ec
x/30xw 0x116ec

x/30xw 0x11720
x/40xw 0x116ac
info watchpoint
delete 2
delete 3
info breakpoints
delete 1
p sp
p/a
p/a $pc
apropos out
60
60 si
until 30
stack
trace
until 102
p *(void)$sp
p *(void **)$sp
p current_process->sp
p current_process->stack
p x current_process->stack
p /x current_process->stack
until 146
until 141
until 77
until 100
continue
p matmul
p matmul->A
p &matmul->A
p &matmul->B
p &matmul->C
dis uart
p uart
p uart->TxFull
p &uart->TxFull
break fuckinglabel
b ver_test
step
stepi
show TargetArchitecture
show architecture
break _sbrk
local
p head_end
p heap_end
p stack_ptrr
heap_end+incr
eval
eval(heap_end+incr)
eval("1"
eval?
p inr
p incr
reg sp
info registers
p &_end
p _start
p _end
p memtop
p &memtop
_end
locals
help
alias
aliases
p (void*)_end
p (void*)_start_
p (void*)_start
p (void*)_e
p (void*)&_end
p (void*)&_endd
p (void*)&_start
p &_start
disass _end
disass &_end
disass _start
x/20i 0x17c8c
frame 0x17c8c
disass *0x17c8c
disass (void*)0x17c8c
disass 0x17c8c
tui layout regs
layout regs
layout split
b uart_getc
continu
list shell.c:127
break  shell.c:127
break  shell.c:199
n
b uart.c:55
p count
b uart.c:65
b _sbrk
strace
bt
p *heap_end
p &heap_end
dis 0x238d8
info tacktrace
info 0x238d8
dis 0x238d8-10 0x238d8+10
disas 0x238d8-10 0x238d8+10
disas 0x238d0 0x238f8
x/i 0x238d0 0x238f8
x/i 0x238d0
p 0x50000
set max_heap_end =0x49999
p max_heap_end
f
b count.c:14
watch buffer[0]
watch buffer[1]
watch buffer[2]
watch buffer[3]
watch buffer[4]
watch buffer[5]
watch buffer[6]
watch buffer[7]
watch buffer[8]
watch buffer[9]
watch buffer[10]
watch buffer[11]
watch buffer[12]
watch buffer[13]
watch buffer[14]
watch buffer[15]
watch buffer[16]
watch buffer[17]
watch buffer[18]
watch buffer[19]
finish
p buffer
p sizeof(buffer)
p i
p 1::buffer
p 1:buffer
print 1:buffer
p 1 buffer
help p
frame 1
p &buffer
p (char (*)[20]) 0x19e38
p (char [20]) 0x19e38
p char[20] 0x19e38
f 0
p a0
print $a0
print $a2
b memmove
print *(char(*)[20])0x19e38
x/20cb 0x19e38
x/20c 0x19e38
x/20 0x19e38
x/20s 0x19e38
b count.c:15
c; x/s 0x19e38
p numLength
p numLength; p buffer
define hook-continue
x/s 0x19e38
end
