info tacktrace
info 0x238d8
dis 0x238d8-10 0x238d8+10
disas 0x238d8-10 0x238d8+10
disas 0x238d0 0x238f8
x/i 0x238d0 0x238f8
x/i 0x238d0
p 0x50000
set max_heap_end =0x49999
p max_heap_end
f
b count.c:14
watch buffer[0]
watch buffer[1]
watch buffer[2]
watch buffer[3]
watch buffer[4]
watch buffer[5]
watch buffer[6]
watch buffer[7]
watch buffer[8]
watch buffer[9]
watch buffer[10]
watch buffer[11]
watch buffer[12]
watch buffer[13]
watch buffer[14]
watch buffer[15]
watch buffer[16]
watch buffer[17]
watch buffer[18]
watch buffer[19]
finish
p buffer
p sizeof(buffer)
p i
p 1::buffer
p 1:buffer
print 1:buffer
p 1 buffer
help p
frame 1
p &buffer
p (char (*)[20]) 0x19e38
p (char [20]) 0x19e38
p char[20] 0x19e38
f 0
p a0
print $a0
print $a2
b memmove
print *(char(*)[20])0x19e38
x/20cb 0x19e38
x/20c 0x19e38
x/20 0x19e38
x/20s 0x19e38
b count.c:15
c; x/s 0x19e38
p numLength
p numLength; p buffer
define hook-continue
x/s 0x19e38
end
b baremetal.c:40
c
p *_impure_ptr 
p _impure_ptr 
p current_process 
p *current_process 
p *current_process.program
p _REENT
p __getreent
q
b count.c:15
continue 
bt
si
b shell.c:128
p _impure_ptr 
c
q
b shell.c:128
b count.c:15
dp
bp
list shell.c:127
delete 1
delete 2
b shell.c:128
c
q
break  shell.c:128
b count.c:15
b baremetal.c:27
c
p next_process
p next_process->program 
p *next_process->program 
p *current_process->program 
p *current_process->status
p current_process->status
p next_process->status
n
p _impure_ptr 
c
q
c
q
b process.c:32
q
c
q
q
b process.c:32
c
n
list 0x183dc
x/s 0x19e38
x/b 0x183dc
x/20b 0x183dc
x/20b 0x1831c
p *proc->sp
p proc->sp
q
b process.c:37
c
p origsp 
p offset
p offset2
p (size_t *)origsp 
p proc->sp
q
p proc->sp
p &proc->sp
c
q
b process.c:33
p *proc->sp
n
p proc->sp
c
p current_process->stack
list current_process->stack
x/b current_process->stack
x/b200 current_process->stack
x/200b current_process->stack
p proc
x/800b current_process->stack
x/800xx current_process->stack
x/800wx current_process->stack
x/200wx current_process->stack
p current_process->sp
q
c
p current_process->sp
p proc->sp
q
b process.c:33
q
c
p proc->sp
q
c
p proc->sp
q
p proc->sp
c
q
define hook-continue
p current_process->sp
end
c
q
c
x/s 0x15e68
x/s 0x16000-408
n
q
si
finish 
q
si
fini
c
c
finish
si
b __adddf3 
disas __adddf3 
q
finish
q
b corruption_detect
b corruption_detect_test
c
p jj
p j
p buf
p &buf
list 0x19810
list current_process->sp
disas current_process->sp
q
b corruption_detect.cA:16
c
disas current_process->sp
p ooo
p &ooo
x/qw 0x198c4
x/w 0x198c4
x/wx 0x198c4
x/wx20 0x198c4
x/20wx 0x198c4
x/20wx 0x198c4-20
x/60wx 0x198c4-40
x/60wx 0x198c4-60
x/40wx 0x198c4-80
x/40wx 0x198c4-100
x/40wx 0x198c4-120
x/40wx 0x198c4-140
x/40wx 0x198c4-160
si
finis
b corruption_detect.c:27
delete 1
c
q
c
jn
n
sisi
gindins
q
b corruption_detect_test
n
b corruption_detect.c:29
c
continue
q
q
q
c
q
b corruption_detect.c:18
c
si
q
b corruption_detect.c:18
info registers 
si
n
c
b __adddf3+300
b *(__adddf3+300)
b <__adddf3+300>
exit
b *(__adddf3+100)
q
c
q
b *(__adddf3+100)
si
c
q
q
b corruption_detect.c:166
c
p i
exit
b store_process 
st
stacktrace
bt
ls
c
cls
f1
frame 1
p i
b corruption_detect.c:117 if i == 1486
b corruption_detect.c:156 if i == 1486
q
b corruption_detect.c:156 if i == 1486
si
frame 1
p result
p result2
c
exit
b corruption_detect.c:156 if i == 1486
si
c
q
b corruption_detect.c:156 if i == 1486
b store_process 
c
si
info registers 
x/500wh current_process->stack
x/400wh current_process->stack
x/400w current_process->stack
x/400wx current_process->stack
exit
b corruption_detect.c:156 if i == 1486
b store_process 
info registers 
ni
info reg
x/400wx current_process->stack
c
frame 1
p result
p result2
q
